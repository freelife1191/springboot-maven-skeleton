spring:
  devtools:
    livereload:
      enabled: true
    remote:
      restart:
        enabled: true
  servlet:
    multipart:
      ## TEMP 파일 경로 지정시 절대경로 지정 default: ${java.io.tmpdir}
      ## ${user.dir}/tmpfiles 는 현재 프로젝트에 tmpfiles
      ## ${user.home}/rcs/tmpfiles 는 USER HOME 디렉토리에 rcs/tmpfiles
      location: ${user.dir}/tmpfiles
## LOCAL H2 DB 설정
  datasource:
    platform: h2
## 공통 코드 테이블 생성
    schema: classpath:sql/common-h2.sql
## 공통 코드 테스트 데이터 INSERT
    data: classpath:sql/data-h2.sql
## 로컬에서 H2 DB에 초기 테이블을 만들어주는 설정 H2 DB를 사용하지 않으면 주석처리
    initialization-mode: always
## h2 DB 사용 설정
    url: jdbc:h2:~
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
## h2 console 사용
      enabled: true
## /h2 로 접속 지정하지 않으면 /h2-console 로 접속
      path: /h2
  jooq:
    sql-dialect: h2
logging:
  config: classpath:logs/logback-local.xml

## 기타 속성설정
properties:
  file:
## 업로드 경로 Docker 컨테이너 내부 경로
## auto_apply.sh 파일의 [FILE_UPLOAD_PATH]에 설정된 HOST 파일업로드 경로와 Mapping

## 경로 지정 설명
## ${user.home} - USER HOME 경로에 files 디렉토리 ex) /home/user/files
## files - Project 디렉토리 경로에 files 디렉토리 ex) backoffice-skeleton/files
## /files - 절대경로인 ROOT 경로에 files 디렉토리 ex) /files

#    upload-dir: ${user.home}/files
    upload-dir: files
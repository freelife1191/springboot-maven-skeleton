<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.5.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.project</groupId>
    <artifactId>springboot-maven-skeleton</artifactId>
    <version>0.0.1</version>
    <name>springboot-maven-skeleton</name>
    <description>springboot-maven-skeleton project for Spring Boot</description>

    <repositories>
        <repository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
        </repository>
    </repositories>

    <properties>
        <java.version>13</java.version>
        <!-- swagger -->
        <springfox-swagger.version>2.9.2</springfox-swagger.version>
        <springfox-swagger-snapshot.version>3.0.0-SNAPSHOT</springfox-swagger-snapshot.version>
        <!-- util -->
        <guava.version>28.2-jre</guava.version>
        <commons-fileupload.version>1.4</commons-fileupload.version>
        <commons-io.version>2.6</commons-io.version>
        <commons-text.version>1.8</commons-text.version>
        <org.springframework.cloud.version>2.2.1.RELEASE</org.springframework.cloud.version>
        <gson.version>2.8.6</gson.version>
        <mysql-connector-java.version>8.0.19</mysql-connector-java.version>
        <poi.version>4.1.2</poi.version>
        <jxls-jexcel.version>1.0.9</jxls-jexcel.version>
        <jooq.version>3.13.1</jooq.version>
        <jooq.skip>false</jooq.skip>
        <jooq.profile.skip>false</jooq.profile.skip>
        <jackson.version>2.10.3</jackson.version>
        <java-uuid-generator.version>4.0.1</java-uuid-generator.version>
        <spring-security-jwt.version>1.1.0.RELEASE</spring-security-jwt.version>
        <UserAgentUtils.version>1.21</UserAgentUtils.version>
        <mariadb.version>2.5.4</mariadb.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <commons-codec.version>1.13</commons-codec.version>
    </properties>

    <dependencies>

        <!-- JOOQ -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <!-- 멀티 DB 설정 시 주석 해제 -->
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jta-atomikos</artifactId>
        </dependency>
        -->
        <!-- DB Connector -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>${mariadb.version}</version>
        </dependency>

        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                    <groupId>org.springframework.boot</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-aws</artifactId>
            <version>${org.springframework.cloud.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-jwt</artifactId>
            <version>${spring-security-jwt.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <!-- JSON -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20190722</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.uuid</groupId>
            <artifactId>java-uuid-generator</artifactId>
            <version>${java-uuid-generator.version}</version>
        </dependency>

        <!-- Apache Common Liberary -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>${commons-text.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>

        <!-- swagger for util -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
        </dependency>

        <!-- swagger 2.9.2 -->
        <!--
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox-swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-swagger.version}</version>
        </dependency>
        -->
        <!-- swagger 3.0.0-SNAPSHOT -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-swagger-snapshot.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox-swagger-snapshot.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-data-rest</artifactId>
            <version>${springfox-swagger-snapshot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <!--
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-spring-webflux</artifactId>
            <version>${springfox-swagger-snapshot.version}</version>
        </dependency>
        -->
        <!-- Excel -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${poi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${poi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jxls</groupId>
            <artifactId>jxls-jexcel</artifactId>
            <version>${jxls-jexcel.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>eu.bitwalker</groupId>
            <artifactId>UserAgentUtils</artifactId>
            <version>${UserAgentUtils.version}</version>
        </dependency>

        <!-- S3 Mock -->
        <dependency>
            <groupId>io.findify</groupId>
            <artifactId>s3mock_2.12</artifactId>
            <version>0.2.5</version>
            <scope>test</scope>
        </dependency>

        <!-- 원하는 타입으로 Parsing 해주는 라이브러리 -->
        <dependency>
            <groupId>com.github.drapostolos</groupId>
            <artifactId>type-parser</artifactId>
            <version>0.6.0</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>
                <!-- The plugin should hook into the generate goal -->
                <executions>
                    <!-- TEST DB 코드 제너레이터 -->
                    <!-- env 값으로 generate를 수행하도록 설정 -->
                    <!--
                    <execution>
                        <id>test</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configurationFile>src/main/resources/jooq/config/test-${env}.xml</configurationFile>
                        </configuration>
                    </execution>
                    -->
                    <!-- TEST2 DB 코드 제너레이터 -->
                    <!-- env 값으로 generate를 수행하도록 설정 -->
                    <!--
                    <execution>
                        <id>test2</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>

                            <configurationFile>src/main/resources/jooq/config/test2-${env}.xml</configurationFile>
                        </configuration>
                    </execution>
                    -->
                </executions>
            </plugin>
        </plugins>
    </build>
    <!-- profile 별로 profile 값을 받아서 env 값을 셋팅 -->
    <!--
    아래와 같이 Jenkins Build 시 -P profile 로 profile 값을 넘겨서 Build 한다
    clean compile install -P stage -D maven.test.skip=true
    -->
    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <!-- Jenkins Build 시 별도의 profile 값을 넘겨주지 않으면 기본값으로 설정됨-->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties> <!-- resource 필터 사용시 개발자 PC에 적용되는 필터 properties 의 폴더 위치 -->
                <!--                <deployTarget>local</deployTarget>-->
                <env>dev</env>
            </properties>
        </profile>
        <profile>
            <id>local</id>
            <properties> <!-- resource 필터 사용시 개발서버에 적용되는 필터 properties 의 폴더 위치 -->
                <!--                <deployTarget></deployTarget>-->
                <env>local</env>
            </properties>
        </profile>
        <profile>
            <id>stage</id>
            <properties> <!-- resource 필터 사용시 개발서버에 적용되는 필터 properties 의 폴더 위치 -->
                <!--                <deployTarget></deployTarget>-->
                <env>stage</env>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties> <!-- resource 필터 사용시 개발서버에 적용되는 필터 properties 의 폴더 위치 -->
                <!--                <deployTarget></deployTarget>-->
                <env>prod</env>
            </properties>
        </profile>
    </profiles>
</project>